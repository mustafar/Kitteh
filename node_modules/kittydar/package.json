{
  "name": "kittydar",
  "description": "Cat detection",
  "version": "0.1.1",
  "author": {
    "name": "Heather Arthur",
    "email": "fayearthur@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/harthur/kittydar.git"
  },
  "dependencies": {
    "canvas": "~0.10.0",
    "brain": "~0.6.0",
    "hog-descriptor": "~0.4.0"
  },
  "main": "./kittydar",
  "readme": "# Kittydar\n\nKittydar is short for kitty radar. Kittydar takes an image (canvas) and tells you the locations of all the cats in the image:\n\n```javascript\nvar cats = kittydar.detectCats(canvas);\n\nconsole.log(\"there are\", cats.length, \"cats in this photo\");\n\nconsole.log(cats[0]);\n\n// { x: 30, y: 200, width: 140, height: 140 }\n```\n\n[Kittydar demo](http://harthur.github.com/kittydar)\n\n# Install\n\nFor node:\n\n```bash\nnpm install kittydar\n```\n\nOr grab the [browser file](http://github.com/harthur/kittydar/downloads)\n\n# Specifics\n\nKittydar takes a `canvas` element. In node you can get a `Canvas` object with [node-canvas](https://github.com/LearnBoost/node-canvas).\n\nKittydar will give an approximate rectangle around the cat's head. Each rectangle has an `x` and `y` for the top left corner, and a `width` and `height` of the rectangle.\n\n# How it works\n\nKittydar first chops the image up into many \"windows\" to test for the presence of a cat head. For each window, kittydar first extracts more tractable data from the image's data. Namely, it computes the [Histogram of Orient Gradients](http://en.wikipedia.org/wiki/Histogram_of_oriented_gradients) descriptor of the image, using the [hog-descriptor](http://github.com/harthur/hog-descriptor) library. This data describes the directions of the edges in the image (where the image changes from light to dark and vice versa) and what strength they are. This data is a vector of numbers that is then fed into a [neural network](https://github.com/harthur/brain) which gives a number from `0` to `1` on how likely the histogram data represents a cat.\n\nThe neural network (the JSON of which is located in this repo) has been pre-trained with thousands of photos of cat heads and their histograms, as well as thousands of non-cats. See the repo for the node training scripts.\n\n# Limitations\n\nKittydar will miss cats sometimes, and sometimes classify non-cats as cats. It's best at detecting upright cats that are facing forward, but it can handle a small tilt or turn in the head.\n\nKittydar isn't fast. It'll take a few seconds to find the cats in one image. There's lots of room for improvement, so fork and send requests.\n\n### Propers\n\n* This informative reasearch paper: [Cat Head Detection - How to Effectively Exploit Shape and Texture Features](http://research.microsoft.com/pubs/80582/ECCV_CAT_PROC.pdf) by Weiwei Zhang, Jian Sun, and Xiaoou Tang.\n* This off the hook [dataset of cat images](http://137.189.35.203/WebUI/CatDatabase/catData.html) annotated with the locations of the cat heads.\n* [@gdeglin](http://github.com/gdeglin) for the name.\n",
  "readmeFilename": "README.md",
  "_id": "kittydar@0.1.1",
  "_from": "kittydar@latest"
}
